# -*- coding: utf-8 -*-
"""MINI PROJECT 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zANAK8A3wbc4TE2dvio4gZ0nc2f770yl

# INITIALIZING AND LOADING DATA
"""

import pandas as pd  #importing pandas
file_path = "/content/miniproject_dataset.csv"  # Locating file path
df = pd.read_csv(file_path)   #Load the dataset

df.info(), df.head() #running basic fuction to get summary and initial few rows

"""# CHECKING MISSING DUPLICATE AND UNIQUE VALUES"""

missing_values = df.isnull().sum()  #to find missing values is.null() is used
duplicates = df.duplicated().sum()  # to find duplicate values .duplicated() is used

unique_values = df.nunique()  # to find uniques values .nuinique() is used

missing_values, duplicates, unique_values  # to get output summary of all the values

"""CLEANING AND REMOVING MISSING AND DUPLICATE VALUES"""

df = df.dropna()  # Remove rows with missing values (if any)

df = df.drop_duplicates()  #Remove duplicate rows (if any)

"""BOX PLOT OF AGE DISTRIBUTION AND SMOKING STATUS"""

import matplotlib.pyplot as plt  #IMPORTING LIBRARIES FOR PLOTTING
import seaborn as sns            #IMPORTING LIBRARIES FOR PLOTTING

sns.set_theme(style="whitegrid")  #SETTING THEME FOR VISUALIZATION

# Create a boxplot to show the distribution of 'AGE' by 'SMOKING_STATUS' with color palette
plt.figure(figsize=(8,6))
sns.boxplot(x='SMOKING', y='AGE', data=df, palette="viridis") #the x-axis represents the SMOKING column, it represents whether a person smokes or not, y is age, paletter is color of plotting

# Title and labels
plt.title('Age Distribution by Smoking Status', fontsize=16)
plt.xlabel('Smoking Status (1=No, 2=Yes)', fontsize=12)
plt.ylabel('Age', fontsize=12)

# Display the plot
plt.show()

"""PIE CHART OF MALE AND FEMALES IN THE DATASET"""

sns.set_theme(style="whitegrid") # Set theme for consistency

gender_counts = df['GENDER'].value_counts() # Count the number presence of each gender

# Plotting the Pie chart
plt.figure(figsize=(7, 7))
plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=90,
        colors=sns.color_palette("pink", n_colors=len(gender_counts)), wedgeprops={'edgecolor': 'black'})

# Add the title to the pie chart
plt.title("Gender Distribution in Dataset")

# Add total count as an additional annotation
total_data = len(df)  # Total number of entries in the dataset
plt.text(-1.5, 1.2, f'Total Entries: {total_data}', horizontalalignment='center', fontsize=12, color='black', weight='bold')

# Show the pie chart
plt.show()

"""# HISTOGRAM FOR AGE DISTRIBUTION BY LUNG CANCER DIAGNOSIS"""

# FacetGrid for Age Distribution by Lung Cancer Diagnosis
g = sns.FacetGrid(df, col="LUNG_CANCER", height=5, col_wrap=2, palette="coolwarm")  #used to create a grid of subplots The col argument specifies that the data should be split by the LUNG_CANCER column
g.map(sns.histplot, 'AGE', kde=True, bins=20)  #PLOTING HISTOGRAM bins are the range which divides the data
g.set_axis_labels("Age", "Frequency")
g.set_titles("Lung Cancer Diagnosis: {col_name}") #GIVING TITLES
g.fig.suptitle("Age Distribution by Lung Cancer Diagnosis", fontsize=16) #main title to the entire figure
g.fig.tight_layout() #spacing is well organized
g.fig.subplots_adjust(top=0.85)  # Adjust title space
plt.show()

"""# PROPORTION PLOT FOR COMPARING SMOKER AND NONSMOKER BY LUNG CANCER

"""

import plotly.express as px

# Create a proportion plot using Plotly
smoking_lung_cancer = df.groupby(['SMOKING', 'LUNG_CANCER']).size().reset_index(name='count') #This groups the data by the SMOKING and LUNG_CANCER

fig = px.bar(smoking_lung_cancer,
             x="SMOKING",
             y="count",
             color="LUNG_CANCER",
             color_discrete_sequence=["#FF6347", "#4682B4"],
             title="Smoking vs Lung Cancer Diagnosis",
             labels={"SMOKING": "Smoking Status (1=No, 2=Yes)", "LUNG_CANCER": "Lung Cancer Diagnosis", "count": "Count"},
             text="count",
             barmode="stack") #This function creates a bar plot in Plotly, x-axis represents the SMOKING, y-axis represents the count barmode="stack": This specifies that the bars should be stacked

fig.update_layout(title="Smoking vs Lung Cancer Diagnosis", xaxis_title="Smoking Status", yaxis_title="Count")
fig.show()

"""# HEAT MAP FOR CORRELATION BETWEEN SYMPTOMS AND LUNG CANCER"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib import cm

# Compute the correlation matrix
corr = df.drop(columns=['GENDER', 'LUNG_CANCER']).corr()  #this function removes the GENDER and LUNG_CANCER columns from the DataFrame

# Create a mask for the upper triangle
mask = np.triu(np.ones_like(corr, dtype=bool)) #his function converts the upper triangular part of the matrix into True

# Set up the figure
plt.figure(figsize=(10, 8))

# Create the circular heatmap
sns.heatmap(corr, annot=True, fmt=".2f", cmap="coolwarm", mask=mask, square=True, linewidths=0.5,
            cbar_kws={"shrink": 0.75}, center=0)

# Title
plt.title("Circular Correlation Between Symptoms and Lung Cancer", fontsize=16)

plt.show()